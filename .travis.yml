compiler: gcc
sudo: require
language: cpp

jobs:
  include:
    - os: linux
      dist: xenial
    # - os: linux
    #   dist: bionic
    - os: windows

before_install:
- |-
    case $TRAVIS_OS_NAME in
      windows)
        [[ ! -f C:/tools/msys64/msys2_shell.cmd ]] && rm -rf C:/tools/msys64
        choco uninstall -y mingw
        choco upgrade --no-progress -y msys2
        export msys2='cmd //C RefreshEnv.cmd '
        export msys2+='& set MSYS=winsymlinks:nativestrict '
        export msys2+='& C:\\tools\\msys64\\msys2_shell.cmd -defterm -no-start'
        export mingw64="$msys2 -mingw64 -full-path -here -c "\"\$@"\" --"
        export msys2+=" -msys2 -c "\"\$@"\" --"
        $msys2 pacman --sync --noconfirm --needed mingw-w64-x86_64-toolchain
        ## Install more MSYS2 packages from https://packages.msys2.org/base here
        taskkill //IM gpg-agent.exe //F  # https://travis-ci.community/t/4967
        export PATH=/C/tools/msys64/mingw64/bin:$PATH
        export MAKE=mingw32-make  # so that Autotools can find it
        ;;
    esac

before_cache:
- |-
    case $TRAVIS_OS_NAME in
      windows)
        # https://unix.stackexchange.com/a/137322/107554
        $msys2 pacman --sync --clean --noconfirm
        $msys2 pacman --noconfirm -S \
            mingw-w64-x86_64-ninja \
            mingw-w64-x86_64-qt5 \
            mingw-w64-x86_64-poppler \
            mingw-w64-x86_64-python \
            mingw-w64-x86_64-pybind11 \
            mingw-w64-x86_64-kitemmodel-qt5 \
            mingw-w64-x86_64-openssl \
            mingw-w64-x86_64-libffi \
            mingw-w64-x86_64-zlib \
            mingw-w64-x86_64-python-pytest
        ;;
    esac

cache:
    directories:
    - $HOME/AppData/Local/Temp/chocolatey
    - /C/tools/msys64

script:
  - |
    case "$TRAVIS_OS_NAME" in
    "linux")
      # assume a ubuntu distribution
      ./build-ubuntu.sh
      ;;
    "windows")
      $mingw64 ./build-mingw64.sh
      ;;
    "osx")
      echo "build osx not yet supported."
      ;;
    esac

after_success:
  - |
    case "$TRAVIS_OS_NAME" in
    "linux")
      # assume a ubuntu distribution
      echo "======"
      find build
      echo "======"
      ./build/test/unit/ommpfritt_unit_test
      ;;
    "windows")
      echo "skip test windows"
      ;;
    "osx")
      echo "skip test osx"
      ;;
    esac

